{"mappings":"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","sources":["src/library.js","src/js/renderMarkupFilmoteka/onClickLogoLibrary.js","src/js/renderMarkupLibrary/renderMarkupLibraryQ.js","src/js/renderMarkupLibrary/renderMarkupLibraryW.js","src/js/modals/modal-library.js","src/js/renderMarkupLibrary/renderModalLibraryMarkup.js","src/js/modals/modal-trailer-test.js"],"sourcesContent":["import { getRefs } from './js/refs';\nimport { SStorage } from './js/storage/sessionStorage';\nimport { onClickLogoLibrary } from './js/renderMarkupFilmoteka/onClickLogoLibrary';\nimport { changeMode } from './js/changeMode/changeMode';\nimport { buttonUp } from './js/scroll/button-up';\n\nimport { loginModal } from './js/firebaseFilm/loginModal';\nimport { needRegisterShow, needRegisterHide } from './js/errors/needRegister';\n\nimport { renderMarkupLibraryQ } from './js/renderMarkupLibrary/renderMarkupLibraryQ';\nimport { renderMarkupLibraryW } from './js/renderMarkupLibrary/renderMarkupLibraryW';\nimport { libraryFirstOpen } from './js/renderMarkupLibrary/renderMarkupLibraryW';\nimport { renderLogin } from './js/renderLogin/renderLogin';\n\nimport toggleModalLibrary from './js/modals/modal-library';\n\nimport './js/modals/modal-trailer-test';\n","import { SStorage } from \"../storage/sessionStorage\";\nimport { getRefs } from \"../refs\";\n\nconst sStorage = new SStorage();\nconst refs = getRefs();\n\nrefs.libraryLogo.addEventListener('click', onClickLogoLibrary)\nexport function onClickLogoLibrary() {\n    sStorage.clear();\n};","import { fbFilmsData, PLACE_Q, PLACE_W } from \"../firebaseFilm/fbFilms\";\nimport { fbFilmsAuth } from \"../firebaseFilm/testAuth\";\nimport { getRefs } from \"../refs\";\nimport { spinnerOn } from \"../spiner/spiner\";\nimport { spinnerOff } from \"../spiner/spiner\";\nimport { markupCreating } from \"../renderMarkupFilmoteka/renderMarkup\";\nimport { renderMarkupList } from \"../renderMarkupFilmoteka/renderMarkup\";\nimport { emptyLibraryHide } from \"../errors/showAndHideErrors\";\nimport { emptyLibraryShow } from \"../errors/showAndHideErrors\";\n\nconst refs = getRefs();\n\nrefs.libraryBtnQ.addEventListener('click', renderMarkupLibraryQ);\n\n\n// загрузка по кнопке очередь\nexport function renderMarkupLibraryQ() {\n    \n  refs.libraryBtnW.classList.remove('current-btn');\n  refs.libraryBtnQ.classList.add('current-btn');\n  if (fbFilmsAuth.isLogin) {\n    refs.library.classList.add('min-height');\n    spinnerOn();\n    emptyLibraryHide();\n    refs.library.innerHTML = '';\n    getFilmFromQU().then(({ films }) => {\n      \n      const filmsProperties = films.map(({ id, posters, title, genres, year, vote }) => (\n        {\n          id,\n          posters,\n          title,\n          genres,\n          year,\n          vote,\n        }\n      ));\n      return filmsProperties;\n    }).then((filmsProperties) => {\n      if (filmsProperties.length !== 0) {\n        makeNewArrProp(filmsProperties);\n        spinnerOff();\n        renderMarkupList(refs.library, filmsProperties, markupCreating);\n      };\n      if (filmsProperties.length === 0) {\n        refs.library.classList.remove('min-height');\n        spinnerOff();\n        emptyLibraryShow();\n      };\n    });\n  };\n};\n\n\nasync function getFilmFromQU() {\n  if (fbFilmsAuth.isLogin) {\n      try {\n        const filmsQ = await fbFilmsData.getFilms(PLACE_Q);\n      if (filmsQ) {\n        return filmsQ;\n        };\n      } catch (err) {\n        console.log(err);\n    };\n  };\n};\n\n\n// вспомогательные функции\nexport function makeNewArrProp(arr) {\n  return arr.forEach(element => {\n    if (element.genres.length === 1) {\n      element.genres = [element.genres[0].name]\n    };\n    if (element.genres.length === 2) {\n      element.genres = [element.genres[0].name, element.genres[1].name]\n    };\n    if (element.genres.length > 2) {\n      element.genres = [element.genres[0].name, element.genres[1].name, 'Other']\n    };\n    }); \n};","import { fbFilmsData, PLACE_Q, PLACE_W } from \"../firebaseFilm/fbFilms\";\nimport { fbFilmsAuth } from \"../firebaseFilm/testAuth\";\nimport { getRefs } from \"../refs\";\nimport { spinnerOn } from \"../spiner/spiner\";\nimport { spinnerOff } from \"../spiner/spiner\";\nimport { markupCreating } from \"../renderMarkupFilmoteka/renderMarkup\";\nimport { renderMarkupList } from \"../renderMarkupFilmoteka/renderMarkup\";\nimport { emptyLibraryHide } from \"../errors/showAndHideErrors\";\nimport { emptyLibraryShow } from \"../errors/showAndHideErrors\";\nimport { renderLogin } from \"../renderLogin/renderLogin\";\nimport { authMy } from \"../firebaseFilm/fbInit\";\nimport { renderLogin } from \"../renderLogin/renderLogin\";\n\nconst refs = getRefs();\n\n\n\n// первая загрузка библиотеки\nexport function libraryFirstOpen() {\n    \n    if (fbFilmsAuth.isLogin) {\n        spinnerOn();\n        emptyLibraryHide();\n        refs.library.innerHTML = '';\n      getFilmFromW().then(({ films }) => {\n        const filmsProperties = films.map(({ id, posters, title, genres, year, vote }) => (\n          {\n            id,\n            posters,\n            title,\n            genres,\n            year,\n            vote,\n          }\n        ));\n        return filmsProperties;\n      }).then((filmsProperties) => {\n        if (filmsProperties.length !== 0) {\n          makeNewArrProp(filmsProperties);\n          spinnerOff();\n          renderMarkupList(refs.library, filmsProperties, markupCreating);\n        };\n        if (filmsProperties.length === 0) {\n          spinnerOff();\n          emptyLibraryShow();\n        };\n      });\n  };\n};\n\n\n// загрузка по кнопке смотреть\n\nrefs.libraryBtnW.addEventListener('click', renderMarkupLibraryW);\n\nexport function renderMarkupLibraryW() {\n    \n  refs.libraryBtnW.classList.add('current-btn');\n  refs.libraryBtnQ.classList.remove('current-btn');\n  if (fbFilmsAuth.isLogin) {\n    refs.library.classList.add('min-height');\n    spinnerOn();\n    emptyLibraryHide();\n    refs.library.innerHTML = '';\n    getFilmFromW().then(({ films }) => {\n      const filmsProperties = films.map(({ id, posters, title, genres, year, vote }) => (\n        {\n          id,\n          posters,\n          title,\n          genres,\n          year,\n          vote,\n        }\n      ));\n      return filmsProperties;\n    }).then((filmsProperties) => {\n      if (filmsProperties.length !== 0) {\n        makeNewArrProp(filmsProperties);\n        spinnerOff();\n        renderMarkupList(refs.library, filmsProperties, markupCreating);\n      };\n      if (filmsProperties.length === 0) {\n        refs.library.classList.remove('min-height');\n        spinnerOff();\n        emptyLibraryShow();\n      };\n    });\n  };\n};\n\n\nasync function getFilmFromW() {\n  if (fbFilmsAuth.isLogin) {\n      try {\n        const filmsW = await fbFilmsData.getFilms(PLACE_W);\n      if (filmsW) {\n        return filmsW;\n        };\n      } catch (err) {\n        console.log(err);\n    };\n  };\n};\n\n\n// вспомогательные функции\nexport function makeNewArrProp(arr) {\n  return arr.forEach(element => {\n    if (element.genres.length === 1) {\n      element.genres = [element.genres[0].name]\n    };\n    if (element.genres.length === 2) {\n      element.genres = [element.genres[0].name, element.genres[1].name]\n    };\n    if (element.genres.length > 2) {\n      element.genres = [element.genres[0].name, element.genres[1].name, 'Other']\n    };\n    }); \n};\n\n","import { getRefs } from '../refs';\nimport FilmsData from '../moviesAPI/filmsData';\nimport { renderModalLibraryMarkup } from '../renderMarkupLibrary/renderModalLibraryMarkup';\nimport { markupModalLibraryCreating } from '../renderMarkupLibrary/renderModalLibraryMarkup';\nimport renderErrorModalMarkup from '../renderMarkupFilmoteka/renderErrorModalMarkup';\nimport { addMod, removeMod } from './modal-film-btn';\nimport { fbFilmsData, PLACE_Q, PLACE_W } from '../firebaseFilm/fbFilms';\nimport TrailerApiService from './modal-trailer';\n\nconst trailerApiService = new TrailerApiService();\n\nconst refs = getRefs();\nconst filmsData = new FilmsData();\nlet filmObj = null;\nlet filmId = null;\n\nexport default function toggleModalLibrary() {\n  refs.library.addEventListener('click', openModalFilm);\n  refs.closeModalBtn.addEventListener('click', closeModal);\n\n  function toggleClasses() {\n    document.body.classList.toggle('modal-open');\n    refs.modal.classList.toggle('is_hidden');\n  }\n\n  function openModalFilm(event) {\n    const hasId = event.target.hasAttribute('data-id');\n    filmId = event.target.dataset.id;\n    if (event.target === event.currentTarget) return;\n    else if (hasId === false) return;\n\n    refs.modalFilmWrapper.innerHTML = '';\n    document.addEventListener('keydown', closeModalOnEscape);\n    refs.modal.addEventListener('click', closeModalOnBackdrop);\n\n    toggleClasses();\n\n    filmsData\n      .getById(filmId)\n      .then(filmProperties => {\n        filmObj = filmProperties;\n        renderModalLibraryMarkup(\n          refs.modalFilmWrapper,\n          markupModalLibraryCreating(filmProperties)\n        );\n\n        const addToWatched = refs.modalFilmWrapper.querySelector(\n          '.remove-from-watched'\n        );\n        const addToQueue =\n          refs.modalFilmWrapper.querySelector('.remove-from-queue');\n        const trailerBtn =\n          refs.modalFilmWrapper.querySelector('.trailer-play-btn');\n\n        trailerBtn.addEventListener('click', onYouTubeBtnClick);\n        addToWatched.addEventListener('click', onClickBtnWatched);\n        addToQueue.addEventListener('click', onClickBtnQueue);\n      })\n      .catch(renderErrorModalMarkup);\n  }\n\n  function onYouTubeBtnClick(event) {\n    trailerApiService.filmID = filmId;\n    trailerApiService.showTrailer();\n    closeModal();\n  }\n\n  async function onClickBtnWatched(event) {\n    if (event.target.classList.contains('remove-from-watched')) {\n      const film1 = await filmsData.getById(filmId);\n      console.log('film1 =', film1);\n      const result = await fbFilmsData.writeTo(film1, 'WA');\n      console.log('result = ', result);\n\n      event.target.textContent = `film removed from watched`;\n      event.target.setAttribute('disabled', '');\n      //   removeMod(event.target, 'watched');\n    }\n    // else if (event.target.classList.contains('remove-from-watched')) {\n    //   addMod(event.target, 'watched');\n    // }\n  }\n\n  async function onClickBtnQueue(event) {\n    if (event.target.classList.contains('remove-from-queue')) {\n      const film1 = await filmsData.getById(filmId);\n      console.log('film1 =', film1);\n      const result = await fbFilmsData.writeTo(film1, 'QU');\n      console.log('result = ', result);\n\n      event.target.textContent = `film removed from queue`;\n      event.target.setAttribute('disabled', '');\n      //   removeMod(event.target, 'queue');\n    }\n    // else if (event.target.classList.contains('remove-from-queue')) {\n    //   addMod(event.target, 'queue');\n    // }\n  }\n\n  function closeModal(event) {\n    toggleClasses();\n  }\n\n  function closeModalOnEscape(event) {\n    if (event.key !== 'Escape') return;\n\n    toggleClasses();\n    document.removeEventListener('keydown', closeModalOnEscape);\n  }\n\n  function closeModalOnBackdrop(event) {\n    if (event.target !== event.currentTarget) return;\n\n    toggleClasses();\n    refs.modal.removeEventListener('click', closeModalOnBackdrop);\n  }\n}\n\ntoggleModalLibrary();\n","export function renderModalLibraryMarkup(element, markupModalCreating) {\n  element.insertAdjacentHTML('beforeend', markupModalCreating);\n}\n\nexport function markupModalLibraryCreating({\n  title,\n  vote,\n  votes,\n  popularity,\n  original_title,\n  genres,\n  about,\n  poster_path,\n  posters,\n  year,\n}) {\n  const genre = genres.map(genres => genres.name).join(', ');\n\n  return `<div class=\"modal-container\">\n        <div class=\"poster-thumb\">\n          <picture>\n              <source\n              srcset=\"\n              ${posters[4].path} 1x,\n              ${posters[5].path} 2x\n              \"\n              media=\"(min-width: 1200px)\"\n            />\n              <source\n              srcset=\"\n              ${posters[3].path} 1x,\n              ${posters[4].path} 2x\n              \"\n              media=\"(min-width: 768px)\"\n            />\n              <source\n              srcset=\"\n              ${posters[3].path} 1x,\n              ${posters[4].path} 2x\n              \"\n              media=\"(max-width: 767px)\"\n            />\n  \n            <img\n              class=\"movie-poster\"\n              src=\"${posters[3].path}\"\n              alt=\"${title}\"\n  \n              loading=\"lazy\"\n            />\n          </picture>\n          <div class=\"trailer-overlay\">\n          <button type=\"button\" class=\"trailer-play-btn\">\n          &#9655;\n              </button>\n          \n          </div>\n        </div>\n  \n        <div>\n          <table class=\"info\">\n            <caption class=\"movie-title\">\n            ${title.toUpperCase()}\n            </caption>\n            <tbody>\n              <tr class=\"table-row\">\n                <td class=\"td\">\n                  <p class=\"characteristic\">Vote / Votes</p>\n                </td>\n                <td class=\"description\">\n                  <span class=\"vote\">${vote} </span> &nbsp;\n                  <span class=\"characteristic\">/</span> ${votes}\n                </td>\n              </tr>\n              <tr class=\"table-row\">\n                <td class=\"td\">\n                  <p class=\"characteristic\">Popularity</p>\n                </td>\n                <td class=\"description\">${popularity}</td>\n              </tr>\n              <tr class=\"table-row\">\n                <td class=\"td\">\n                  <p class=\"characteristic\">Original Title</p>\n                </td>\n                <td class=\"description\">${original_title.toUpperCase()}</td>\n              </tr>\n              <tr class=\"table-row\">\n                <td class=\"td\">\n                  <p class=\"characteristic\">Genre</p>\n                </td>\n                <td class=\"description\">${genre}</td>\n              </tr>\n            </tbody>\n          </table>\n          <h3 class=\"about\">About</h3>\n          <p class=\"about-descr\">\n            ${about}\n          </p>\n          <div class=\"buttons-wrapper\">\n            <button\n              type=\"button\"\n              class=\"button-modal remove-from-watched\"\n              data-action=\"add-to-watched\"\n            >\n            remove from Watched</button\n            ><button\n              type=\"button\"\n              class=\"button-modal remove-from-queue\"\n              data-action=\"add-to-queue\"\n            >\n            remove from queue\n            </button>\n          </div>\n        </div>\n      </div>\n      `;\n}\n","import TrailerApiService from './modal-trailer';\n\nconst trailerApiService = new TrailerApiService();\n\nlet youTubeBtn;\n\n// при открытии модального окна\n// youTubeBtn = document.querySelector('.testplayer');\n// youTubeBtn.addEventListener('click', onYouTubeBtnClick);\n\n// при закрытии модального окна\n// youTubeBtn.removeEventListener('click', onYouTubeBtnClick);\n\nexport function onYouTubeBtnClick(e) {\n  //   trailerApiService.filmID = Number(e.currentTarget.dataset.id);\n  trailerApiService.filmID = 593643; // временно\n  trailerApiService.showTrailer();\n}\n"],"names":["parcelRequire","$4aPXr","$f81308d381ecbf7f$var$sStorage","SStorage","$krGWQ","getRefs","libraryLogo","addEventListener","clear","$hqPq9","$b07baa24b08a6139$var$refs","libraryBtnQ","libraryBtnW","classList","remove","add","$sgMsR","fbFilmsAuth","isLogin","library","$gzWlL","spinnerOn","$4AmR3","emptyLibraryHide","innerHTML","async","filmsQ","fbFilmsData","getFilms","PLACE_Q","err","console","log","$b07baa24b08a6139$var$getFilmFromQU","then","films","map","id","posters","title","genres","year","vote","filmsProperties","length","forEach","element","name","spinnerOff","$fK7aK","renderMarkupList","markupCreating","emptyLibraryShow","$d8392f7a529c17a5$var$refs","$d8392f7a529c17a5$var$getFilmFromW","filmsW","PLACE_W","$d8392f7a529c17a5$export$7db4f472cc9169d5","arr","$a03bcc6e798d73c1$var$trailerApiService","default","$a03bcc6e798d73c1$var$refs","$a03bcc6e798d73c1$var$filmsData","$4Dq8E","$a03bcc6e798d73c1$var$filmObj","$a03bcc6e798d73c1$var$filmId","toggleClasses","document","body","toggle","modal","onYouTubeBtnClick","event","filmID","showTrailer","closeModal","onClickBtnWatched","target","contains","film1","getById","result","writeTo","textContent","setAttribute","onClickBtnQueue","closeModalOnEscape","key","removeEventListener","closeModalOnBackdrop","currentTarget","hasId","hasAttribute","dataset","modalFilmWrapper","filmProperties","markupModalCreating","votes","popularity","original_title","genres1","about","poster_path","genre","join","path","toUpperCase","insertAdjacentHTML","addToWatched","querySelector","addToQueue","catch","$lBdXx","closeModalBtn","$a03bcc6e798d73c1$export$2e2bcd8739ae039"],"version":3,"file":"library.3a37e603.js.map"}